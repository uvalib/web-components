class e extends HTMLElement{static get observedAttributes(){return["opened"]}constructor(){super(),this.opened=!1}connectedCallback(){this._eval(!1),this._setupDom()}_setupDom(){this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML="\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n        }\n      </style>\n      <slot></slot>\n    ",this.shadow.querySelector("slot").addEventListener("slotchange",function(e){this._eval(!1)}.bind(this))}attributeChangedCallback(e,t,n){switch(e){case"opened":t!=n&&(this.opened=null!==n,this._eval().then(function(){this.dispatchEvent(new CustomEvent("transitioning-changed",{detail:{opened:this.opened}}))}.bind(this)),this.dispatchEvent(new CustomEvent("opened-changed",{detail:{opened:this.opened}})))}}_eval(e=!0){var t=Promise.resolve();if(e){var n=this.scrollHeight;t=this._animate(n,!this.opened)}else this.style.height=this.opened?"auto":"0px";return t}_animate(e,t=!1){this.transitioning=!0;var n=this.animate(t?{height:[e+"px",0]}:{height:[0,e+"px"]},{easing:"ease-in-out",duration:1.5*e,fill:"forwards"});return n.finished.then(function(){this.style.height=t?"0":"auto",n.cancel(),this.transitioning=!1}.bind(this))}toggle(){this.opened=!this.opened,this.opened?this.setAttribute("opened",""):this.removeAttribute("opened")}}window.customElements.define("uvalib-collapse",e);
